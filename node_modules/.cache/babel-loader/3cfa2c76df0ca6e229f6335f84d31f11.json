{"ast":null,"code":"var _jsxFileName = \"/home/savajpatel/Documents/reactapp/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: '1',\n        name: 'Max',\n        age: '28'\n      }, {\n        id: '2',\n        name: 'Manu',\n        age: '29'\n      }, {\n        id: '3',\n        name: 'Stephanie',\n        age: '26'\n      }],\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      this.setState({\n        persons: [{\n          name: newName,\n          age: '21'\n        }, {\n          name: 'Manu',\n          age: '29'\n        }, {\n          name: 'Stephanie',\n          age: '24'\n        }]\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.name;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n      this.setState({\n        persons: [{\n          name: 'Max',\n          age: '21'\n        }, {\n          name: event.target.value,\n          age: '29'\n        }, {\n          name: 'Stephanie',\n          age: '24'\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      this.setState({\n        showPersons: !this.state.showPersons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Switch Name\"), persons);\n  }\n\n}","map":{"version":3,"sources":["/home/savajpatel/Documents/reactapp/my-app/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","showPersons","switchNameHandler","newName","setState","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","togglePersonHandler","deletePersonHandler","splice","render","style","backgroundColor","color","font","border","padding","cursor","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,KAAjB;AAAwBC,QAAAA,GAAG,EAAE;AAA7B,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,MAAjB;AAAyBC,QAAAA,GAAG,EAAE;AAA9B,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,WAAjB;AAA8BC,QAAAA,GAAG,EAAE;AAAnC,OAHO,CADH;AAMNC,MAAAA,WAAW,EAAE;AANP,KADiC;;AAAA,SASzCC,iBATyC,GASpBC,OAAD,IAAa;AAC/B,WAAKC,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,CACP;AAAEE,UAAAA,IAAI,EAAEI,OAAR;AAAiBH,UAAAA,GAAG,EAAE;AAAtB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,GAAG,EAAE;AAArB,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAHO;AADG,OAAd;AAOD,KAjBwC;;AAAA,SAmBzCK,kBAnByC,GAmBpB,CAACC,KAAD,EAAQR,EAAR,KAAe;AAElC,YAAMS,WAAW,GAAG,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,SAAnB,CAA6BC,CAAC,IAAI;AACpD,eAAOA,CAAC,CAACX,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB;AAKA,YAAMY,MAAM,GAAG,EACb,GAAG,KAAKd,KAAL,CAAWC,OAAX,CAAmBU,WAAnB;AADU,OAAf;AAIAG,MAAAA,MAAM,CAACX,IAAP,GAAcO,KAAK,CAACK,MAAN,CAAaZ,IAA3B;AAEA,YAAMF,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AAEAA,MAAAA,OAAO,CAACU,WAAD,CAAP,GAAuBG,MAAvB;AAEA,WAAKN,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAEA;AADG,OAAd;AAIA,WAAKO,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,CACP;AAAEE,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,GAAG,EAAE;AAApB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAEO,KAAK,CAACK,MAAN,CAAaC,KAArB;AAA4BZ,UAAAA,GAAG,EAAE;AAAjC,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAHO;AADG,OAAd;AAOD,KA/CwC;;AAAA,SAiDzCa,mBAjDyC,GAiDnB,MAAM;AAC1B,WAAKT,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE,CAAC,KAAKL,KAAL,CAAWK;AADb,OAAd;AAGD,KArDwC;;AAAA,SAuDzCa,mBAvDyC,GAuDlBP,WAAD,IAAiB;AACnC,YAAMV,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACFA,MAAAA,OAAO,CAACkB,MAAR,CAAeR,WAAf,EAA4B,CAA5B;AACA,WAAKH,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAEA;AADG,OAAd;AAGD,KA7DwC;AAAA;;AA+DzCmB,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAE,OADL;AAEZC,MAAAA,KAAK,EAAE,OAFK;AAGZC,MAAAA,IAAI,EAAE,SAHM;AAIZC,MAAAA,MAAM,EAAE,gBAJI;AAKZC,MAAAA,OAAO,EAAE,KALG;AAMZC,MAAAA,MAAM,EAAE;AANI,KAAd;AASA,QAAI1B,OAAO,GAAG,IAAd;;AAEA,QAAI,KAAKD,KAAL,CAAWK,WAAf,EAA4B;AAE1BJ,MAAAA,OAAO,GAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKD,KAAL,CAAWC,OAAX,CAAmB2B,GAAnB,CAAuB,CAACd,MAAD,EAASe,KAAT,KAAmB;AACxC,eAAO,oBAAC,MAAD;AACP,UAAA,KAAK,EAAE,MAAM,KAAKX,mBAAL,CAAyBW,KAAzB,CADN;AAEP,UAAA,IAAI,EAAIf,MAAM,CAACX,IAFR;AAGP,UAAA,GAAG,EAAEW,MAAM,CAACV,GAHL;AAIP,UAAA,GAAG,EAAEU,MAAM,CAACZ,EAJL;AAKP,UAAA,OAAO,EAAGQ,KAAD,IAAW,KAAKD,kBAAL,CAAwBC,KAAxB,EAA+BI,MAAM,CAACZ,EAAtC,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,OAPD,CAFJ,CAFA;AAyBAmB,MAAAA,KAAK,CAACC,eAAN,GAAwB,KAAxB;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,KAAK,EAAED,KAAf;AAAsB,MAAA,OAAO,EAAE,KAAKJ,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGIhB,OAHJ,CADF;AAkBD;;AA3HwC","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nexport default class App extends Component {\n  state = {\n    persons: [\n      { id: '1', name: 'Max', age: '28' },\n      { id: '2', name: 'Manu', age: '29' },\n      { id: '3', name: 'Stephanie', age: '26' }\n    ],\n    showPersons: false\n  }\n  switchNameHandler = (newName) => {\n    this.setState({\n      persons: [\n        { name: newName, age: '21' },\n        { name: 'Manu', age: '29' },\n        { name: 'Stephanie', age: '24' }\n      ]\n    });\n  }\n\n  nameChangedHandler = (event, id) => {\n    \n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    person.name = event.target.name;\n\n    const persons = [...this.state.persons];\n\n    persons[personIndex] = person;\n    \n    this.setState({\n      persons: persons\n    })\n\n    this.setState({\n      persons: [\n        { name: 'Max', age: '21' },\n        { name: event.target.value, age: '29' },\n        { name: 'Stephanie', age: '24' }\n      ]\n    });\n  }\n  \n  togglePersonHandler = () => {\n    this.setState({\n      showPersons: !this.state.showPersons\n    });\n  }\n\n  deletePersonHandler = (personIndex) => {\n      const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({\n      persons: persons\n    })\n  }\n\n  render(){\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    }\n\n    let persons = null;\n\n    if( this.state.showPersons ){\n\n      persons = (\n\n      <div>\n        {\n          this.state.persons.map((person, index) => {\n            return <Person \n            click={() => this.deletePersonHandler(index)}\n            name = {person.name} \n            age={person.age}\n            key={person.id}\n            changed={(event) => this.nameChangedHandler(event, person.id)} />\n          })}\n      {/* <Person \n      name={this.state.persons[0].name} \n      age={this.state.persons[0].age} />\n      <Person \n      name={this.state.persons[1].name} \n      age={this.state.persons[1].age} \n      click={this.switchNameHandler.bind(this, 'Max!')} \n      changed={this.nameChangedHandler}>My Hobbies: Racing</Person>\n      <Person \n      name={this.state.persons[2].name} \n      age={this.state.persons[2].age}/> */}\n    </div>\n     ); \n      style.backgroundColor = 'red';\n    }\n\n    return (\n      <div className=\"App\">\n        {/* <button style={style} onClick={() => this.switchNameHandler('Maxasd')}>Switch Name</button> */}\n        <button style={style} onClick={this.togglePersonHandler}>Switch Name</button>\n        { persons}\n        {/* { \n          this.state.showPersons === true ? \n            <div>\n            <Person name={this.state.persons[0].name} age={this.state.persons[0].age} />\n            <Person name={this.state.persons[1].name} age={this.state.persons[1].age} click={this.switchNameHandler.bind(this, 'Max!')} changed={this.nameChangedHandler}>My Hobbies: Racing</Person>\n            <Person name={this.state.persons[2].name} age={this.state.persons[2].age}/>\n            </div> : null\n          \n        } */}\n          \n       </div>\n\n     );\n  }\n \n}"]},"metadata":{},"sourceType":"module"}