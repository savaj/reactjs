{"ast":null,"code":"var _jsxFileName = \"/home/savajpatel/Documents/reactapp/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Radium from 'radium';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: '1',\n        name: 'Max',\n        age: '28'\n      }, {\n        id: '2',\n        name: 'Manu',\n        age: '29'\n      }, {\n        id: '3',\n        name: 'Stephanie',\n        age: '26'\n      }],\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      this.setState({\n        persons: [{\n          name: newName,\n          age: '21'\n        }, {\n          name: 'Manu',\n          age: '29'\n        }, {\n          name: 'Stephanie',\n          age: '24'\n        }]\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.name;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n      this.setState({\n        persons: [{\n          name: 'Max',\n          age: '21'\n        }, {\n          name: event.target.value,\n          age: '29'\n        }, {\n          name: 'Stephanie',\n          age: '24'\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      this.setState({\n        showPersons: !this.state.showPersons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red';\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      };\n    } //let classes = ['red', 'bold'].join(' ');\n\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.join('  '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"This is real working\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Switch Name\"), persons);\n  }\n\n}\n\nexport default Radium(App);","map":{"version":3,"sources":["/home/savajpatel/Documents/reactapp/my-app/src/App.js"],"names":["React","Component","Radium","Person","App","state","persons","id","name","age","showPersons","switchNameHandler","newName","setState","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","togglePersonHandler","deletePersonHandler","splice","render","style","backgroundColor","color","font","border","padding","cursor","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Radium from 'radium';\nimport Person from './Person/Person';\n\n class App extends Component {\n  state = {\n    persons: [\n      { id: '1', name: 'Max', age: '28' },\n      { id: '2', name: 'Manu', age: '29' },\n      { id: '3', name: 'Stephanie', age: '26' }\n    ],\n    showPersons: false\n  }\n  switchNameHandler = (newName) => {\n    this.setState({\n      persons: [\n        { name: newName, age: '21' },\n        { name: 'Manu', age: '29' },\n        { name: 'Stephanie', age: '24' }\n      ]\n    });\n  }\n\n  nameChangedHandler = (event, id) => {\n    \n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    person.name = event.target.name;\n\n    const persons = [...this.state.persons];\n\n    persons[personIndex] = person;\n    \n    this.setState({\n      persons: persons\n    })\n\n    this.setState({\n      persons: [\n        { name: 'Max', age: '21' },\n        { name: event.target.value, age: '29' },\n        { name: 'Stephanie', age: '24' }\n      ]\n    });\n  }\n  \n  togglePersonHandler = () => {\n    this.setState({\n      showPersons: !this.state.showPersons\n    });\n  }\n\n  deletePersonHandler = (personIndex) => {\n      const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({\n      persons: persons\n    })\n  }\n\n  render(){\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover':{\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    }\n\n    let persons = null;\n\n    if( this.state.showPersons ){\n\n      persons = (\n\n      <div>\n        {\n          this.state.persons.map((person, index) => {\n            return <Person \n            click={() => this.deletePersonHandler(index)}\n            name = {person.name} \n            age={person.age}\n            key={person.id}\n            changed={(event) => this.nameChangedHandler(event, person.id)} />\n          })}\n      {/* <Person \n      name={this.state.persons[0].name} \n      age={this.state.persons[0].age} />\n      <Person \n      name={this.state.persons[1].name} \n      age={this.state.persons[1].age} \n      click={this.switchNameHandler.bind(this, 'Max!')} \n      changed={this.nameChangedHandler}>My Hobbies: Racing</Person>\n      <Person \n      name={this.state.persons[2].name} \n      age={this.state.persons[2].age}/> */}\n    </div>\n     ); \n      style.backgroundColor = 'red';\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      }\n    }\n    //let classes = ['red', 'bold'].join(' ');\n    const classes = [];\n    \n    if(this.state.persons.length <= 2){\n      classes.push('red');\n    }\n\n    if(this.state.persons.length <= 1){\n      classes.push('bold');\n    }\n\n    return (\n      <div className=\"App\">\n        {/* <button style={style} onClick={() => this.switchNameHandler('Maxasd')}>Switch Name</button> */}\n        <p className={classes.join('  ')}>This is real working</p>\n        <button  style={style} onClick={this.togglePersonHandler}>Switch Name</button>\n        { persons}\n        {/* { \n          this.state.showPersons === true ? \n            <div>\n            <Person name={this.state.persons[0].name} age={this.state.persons[0].age} />\n            <Person name={this.state.persons[1].name} age={this.state.persons[1].age} click={this.switchNameHandler.bind(this, 'Max!')} changed={this.nameChangedHandler}>My Hobbies: Racing</Person>\n            <Person name={this.state.persons[2].name} age={this.state.persons[2].age}/>\n            </div> : null\n          \n        } */}\n          \n       </div>\n\n     );\n  }\n \n}\nexport default Radium(App);"]},"metadata":{},"sourceType":"module"}